
# url 里填写自己的订阅,名称不能重复
proxy-providers:
  provider1:
    url: "your url" # 你的订阅地址
    type: http
    interval: 1800 # 更新间隔 单位秒
    health-check: {enable: true,url: "https://www.gstatic.com/generate_204", interval: 100} # 健康检查 单位秒
    override:
      additional-prefix: "[your prefix]" # 节点前缀

  provider2:
    url: "your url"
    type: http
    interval: 1800
    health-check: {enable: true,url: "https://www.gstatic.com/generate_204",interval: 100}
    override:
      additional-prefix: "[your prefix]"
  provider3:
    url: "your url"
    type: http
    interval: 1800
    health-check: {enable: true,url: "https://www.gstatic.com/generate_204",interval: 100}
    override:
      additional-prefix: "[your prefix]"


proxies: 
  - name: "直连"
    type: direct
    udp: true



mode: rule
mixed-port: 7890
allow-lan: true
log-level: info
external-controller: 127.0.0.1:9090
# secret: '' # webui秘钥
unified-delay: true
geodata-mode: true
geo-auto-update: true
geox-url:
  geoip: https://fastgh.lainbo.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geoip-lite.dat
  geosite: https://fastgh.lainbo.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geosite.dat
  mmdb: https://fastgh.lainbo.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/country-lite.mmdb
external-controller-cors:
  allow-private-network: true
  allow-origins:
  - '*'
sniffer:
  enable: true
  sniff:
    HTTP:
      ports:
      - 80
      - 8080-8880
      override-destination: true
    TLS:
      ports:
      - 443
      - 8443
    QUIC:
      ports:
      - 443
      - 8443
geo-update-interval: 24
geodata-loader: standard
profile:
  store-selected: true
  store-fake-ip: true

# tun
tun:
  auto-detect-interface: true
  auto-route: true
  device: Mihomo
  dns-hijack:
  - any:53
  mtu: 1500
  stack: mixed
  strict-route: true
  enable: true
bind-address: '*'
tcp-concurrent: true

# dns
dns:
  enable: true
  ipv6: false
  default-nameserver:
  - 180.184.1.1
  - https://1.12.12.12/dns-query
  - https://119.29.29.29/dns-query
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.1/16
  use-hosts: true
  nameserver:
  - https://doh.pub/dns-query
  - https://dns.alidns.com/dns-query
  fallback:
  - https://doh.dns.sb/dns-query
  - https://dns.cloudflare.com/dns-query
  - https://dns.twnic.tw/dns-query
  - tls://8.8.4.4:853
  fallback-filter:
    geoip: true
    ipcidr:
    - 240.0.0.0/4
    - 0.0.0.0/32
  prefer-h3: true
  nameserver-policy:
    http-inputs-notion.splunkcloud.com,+.notion-static.com,+.notion.com,+.notion.new,+.notion.site,+.notion.so: tls://dns.jerryw.cn
    geosite:geolocation-!cn:
    - https://doh.pub/dns-query
    - https://dns.alidns.com/dns-query
    - 180.184.1.1
    nameserver:
    - https://doh.pub/dns-query
    - https://dns.alidns.com/dns-query
    - 180.184.1.1


proxy-groups:
- interval: 300 # 更新间隔 单位秒
  timeout: 3000 # 超时时间 单位毫秒
  url: https://www.google.com/generate_204
  lazy: true # 延迟加载
  max-failed-times: 3 # 最大失败次数
  hidden: false # 是否隐藏
  name: 节点选择
  type: select
  proxies:
  - 延迟选优
  - 香港节点
  - 日本节点
  - 新加坡节点
  - 美国节点
  - 韩国节点
  - 台湾节点
  - 全球节点
  icon: https://fastly.jsdelivr.net/gh/clash-verge-rev/clash-verge-rev.github.io@main/docs/assets/icons/adjust.svg
- interval: 60
  timeout: 3000
  url: https://www.google.com/generate_204
  lazy: true
  max-failed-times: 3
  hidden: false
  name: 延迟选优
  type: url-test
  tolerance: 50
  include-all: true
  filter: 🇭🇰|🇯🇵|🇺🇸|🇸🇬|🇨🇳|港|hk|hongkong|台|tw|taiwan|日|jp|japan|新|sg|singapore|美|us|unitedstates|🇰🇷|韩国|韓|首尔|KR|Korea
  icon: https://fastly.jsdelivr.net/gh/clash-verge-rev/clash-verge-rev.github.io@main/docs/assets/icons/speed.svg
- interval: 300
  timeout: 3000
  url: https://www.google.com/generate_204
  lazy: true
  max-failed-times: 3
  hidden: false
  name: 谷歌服务
  type: select
  proxies:
  - 韩国节点
  - 新加坡节点
  - 美国节点
  - 日本节点
  - 全球节点
  icon: https://fastly.jsdelivr.net/gh/clash-verge-rev/clash-verge-rev.github.io@main/docs/assets/icons/google.svg
- interval: 60
  timeout: 3000
  url: https://www.google.com/generate_204
  lazy: true
  max-failed-times: 3
  hidden: false
  name: 香港节点
  type: url-test
  tolerance: 50
  include-all: true
  filter: 🇭🇰|香港|HK|Hong
  icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Hong_Kong.png
- interval: 60
  timeout: 3000
  url: https://www.google.com/generate_204
  lazy: true
  max-failed-times: 3
  hidden: false
  name: 日本节点
  type: url-test
  tolerance: 50
  include-all: true
  filter: 🇯🇵|日本|川日|东京|大阪|泉日|埼玉|JP|Japan
  icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Japan.png
- interval: 60
  timeout: 3000
  url: https://www.google.com/generate_204
  lazy: true
  max-failed-times: 3
  hidden: false
  name: 新加坡节点
  type: url-test
  tolerance: 50
  include-all: true
  filter: 🇸🇬|新加坡|狮|SG|Singapore
  icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Singapore.png
- interval: 60
  timeout: 3000
  url: https://www.google.com/generate_204
  lazy: true
  max-failed-times: 3
  hidden: false
  name: 美国节点
  type: url-test
  tolerance: 50
  include-all: true
  filter: 🇺🇸|美国|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|US|United States
  icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/United_States.png
- interval: 60
  timeout: 3000
  url: https://www.google.com/generate_204
  lazy: true
  max-failed-times: 3
  hidden: false
  name: 韩国节点
  type: url-test
  tolerance: 50
  include-all: true
  filter: 🇰🇷|韩国|韓|首尔|KR|Korea
  icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Korea.png
- interval: 60
  timeout: 3000
  url: https://www.google.com/generate_204
  lazy: true
  max-failed-times: 3
  hidden: false
  name: 台湾节点
  type: url-test
  tolerance: 50
  include-all: true
  filter: 🇹🇼|台湾|TW|Tai|Taiwan
  icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Taiwan.png
- interval: 60
  timeout: 3000
  url: https://www.google.com/generate_204
  lazy: true
  max-failed-times: 3
  hidden: false
  name: 全球节点
  type: url-test
  tolerance: 50
  include-all: true
  filter: (?i)^(?!.*(?:🇭🇰|🇯🇵|🇺🇸|🇸🇬|🇨🇳|港|hk|hongkong|台|tw|taiwan|日|jp|japan|新|sg|singapore|美|us|unitedstates|🇰🇷|韩国|韓|首尔|KR|Korea)).*
  icon: https://fastly.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Global.png
- interval: 300
  timeout: 3000
  url: https://www.google.com/generate_204
  lazy: true
  max-failed-times: 3
  hidden: false
  name: 漏网之鱼
  type: select
  proxies:
  - 延迟选优
  - 香港节点
  - 日本节点
  - 新加坡节点
  - 美国节点
  - 韩国节点
  - 台湾节点
  - 全球节点
  icon: https://fastly.jsdelivr.net/gh/clash-verge-rev/clash-verge-rev.github.io@main/docs/assets/icons/fish.svg
rule-providers:
  AdBlock:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/AdBlock.yaml'
    path: ./Rules/AdBlock
    interval: 86400
  HTTPDNS:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/HTTPDNS.yaml'
    path: ./Rules/HTTPDNS
    interval: 86400
  Special:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Special.yaml'
    path: ./Rules/Special
    interval: 86400
  PROXY:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Proxy.yaml'
    path: ./Rules/Proxy
    interval: 86400
  Domestic:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Domestic.yaml'
    path: ./Rules/Domestic
    interval: 86400
  Domestic IPs:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Domestic%20IPs.yaml'
    path: ./Rules/Domestic_IPs
    interval: 86400
  LAN:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/LAN.yaml'
    path: ./Rules/LAN
    interval: 86400
  Netflix:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Media/Netflix.yaml'
    path: ./Rules/Media/Netflix
    interval: 86400
  Spotify:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Media/Spotify.yaml'
    path: ./Rules/Media/Spotify
    interval: 86400
  # YouTube Music:
  #   type: http
  #   behavior: classical
  #   url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Media/YouTube%20Music.yaml'
  #   path: ./Rules/Media/YouTube_Music
  #   interval: 86400
  YouTube:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Media/YouTube.yaml'
    path: ./Rules/Media/YouTube
    interval: 86400
  Max:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Media/Max.yaml'
    path: ./Rules/Media/Max
    interval: 86400
  Bilibili:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Media/Bilibili.yaml'
    path: ./Rules/Media/Bilibili
    interval: 86400
  IQ:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Media/IQ.yaml'
    path: ./Rules/Media/IQI
    interval: 86400
  IQIYI:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Media/IQIYI.yaml'
    path: ./Rules/Media/IQYI
    interval: 86400
  Letv:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Media/Letv.yaml'
    path: ./Rules/Media/Letv
    interval: 86400
  # MOO:
  #   type: http
  #   behavior: classical
  #   url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Media/MOO.yaml'
  #   path: ./Rules/Media/MOO
  #   interval: 86400
  Netease Music:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Media/Netease%20Music.yaml'
    path: ./Rules/Media/Netease_Music
    interval: 86400
  Tencent Video:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Media/Tencent%20Video.yaml'
    path: ./Rules/Media/Tencent_Video
    interval: 86400
  Youku:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Media/Youku.yaml'
    path: ./Rules/Media/Youku
    interval: 86400
  WeTV:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Media/WeTV.yaml'
    path: ./Rules/Media/WeTV
    interval: 86400
  ABC:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Media/ABC.yaml'
    path: ./Rules/Media/ABC
    interval: 86400
  Abema TV:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Media/Abema%20TV.yaml'
    path: ./Rules/Media/Abema_TV
    interval: 86400
  Amazon:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Media/Amazon.yaml'
    path: ./Rules/Media/Amazon
    interval: 86400
  Apple Music:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Media/Apple%20Music.yaml'
    path: ./Rules/Media/Apple_Music
    interval: 86400
  Apple News:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Media/Apple%20News.yaml'
    path: ./Rules/Media/Apple_News
    interval: 86400
  Apple TV:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Media/Apple%20TV.yaml'
    path: ./Rules/Media/Apple_TV
    interval: 86400
  Bahamut:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Media/Bahamut.yaml'
    path: ./Rules/Media/Bahamut
    interval: 86400
  BBC iPlayer:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Media/BBC%20iPlayer.yaml'
    path: ./Rules/Media/BBC_iPlayer
    interval: 86400
  DAZN:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Media/DAZN.yaml'
    path: ./Rules/Media/DAZN
    interval: 86400
  Discovery Plus:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Media/Discovery%20Plus.yaml'
    path: ./Rules/Media/Discovery_Plus
    interval: 86400
  Disney Plus:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Media/Disney%20Plus.yaml'
    path: ./Rules/Media/Disney_Plus
    interval: 86400
  encoreTVB:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Media/encoreTVB.yaml'
    path: ./Rules/Media/encoreTVB
    interval: 86400
  F1 TV:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Media/F1%20TV.yaml'
    path: ./Rules/Media/F1_TV
    interval: 86400
  Fox Now:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Media/Fox%20Now.yaml'
    path: ./Rules/Media/Fox_Now
    interval: 86400
  Fox+:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Media/Fox%2B.yaml'
    path: ./Rules/Media/Fox+
    interval: 86400
  Hulu Japan:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Media/Hulu%20Japan.yaml'
    path: ./Rules/Media/Hulu_Japan
    interval: 86400
  Hulu:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Media/Hulu.yaml'
    path: ./Rules/Media/Hulu
    interval: 86400
  Japonx:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Media/Japonx.yaml'
    path: ./Rules/Media/Japonx
    interval: 86400
  JOOX:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Media/JOOX.yaml'
    path: ./Rules/Media/JOOX
    interval: 86400
  KKBOX:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Media/KKBOX.yaml'
    path: ./Rules/Media/KKBOX
    interval: 86400
  KKTV:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Media/KKTV.yaml'
    path: ./Rules/Media/KKTV
    interval: 86400
  Line TV:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Media/Line%20TV.yaml'
    path: ./Rules/Media/Line_TV
    interval: 86400
  myTV SUPER:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Media/myTV%20SUPER.yaml'
    path: ./Rules/Media/myTV_SUPER
    interval: 86400
  Niconico:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Media/Niconico.yaml'
    path: ./Rules/Media/Niconico
    interval: 86400
  Pandora:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Media/Pandora.yaml'
    path: ./Rules/Media/Pandora
    interval: 86400
  PBS:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Media/PBS.yaml'
    path: ./Rules/Media/PBS
    interval: 86400
  Pornhub:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Media/Pornhub.yaml'
    path: ./Rules/Media/Pornhub
    interval: 86400
  Soundcloud:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Media/Soundcloud.yaml'
    path: ./Rules/Media/Soundcloud
    interval: 86400
  ViuTV:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Media/ViuTV.yaml'
    path: ./Rules/Media/ViuTV
    interval: 86400
  Telegram:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Telegram.yaml'
    path: ./Rules/Telegram
    interval: 86400
  Crypto:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Crypto.yaml'
    path: ./Rules/Crypto
    interval: 86400
  Discord:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Discord.yaml'
    path: ./Rules/Discord
    interval: 86400
  Steam:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Steam.yaml'
    path: ./Rules/Steam
    interval: 86400
  Speedtest:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Speedtest.yaml'
    path: ./Rules/Speedtest
    interval: 86400
  PayPal:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/PayPal.yaml'
    path: ./Rules/PayPal
    interval: 86400
  Microsoft:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Microsoft.yaml'
    path: ./Rules/Microsoft
    interval: 86400
  AI Suite:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/AI%20Suite.yaml'
    path: ./Rules/AI Suite
    interval: 86400
  Apple:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Apple.yaml'
    path: ./Rules/Apple
    interval: 86400
  Google FCM:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Google%20FCM.yaml'
    path: ./Rules/Google FCM
    interval: 86400
  Scholar:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/Scholar.yaml'
    path: ./Rules/Scholar
    interval: 86400
  miHoYo:
    type: http
    behavior: classical
    url: 'https://testingcf.jsdelivr.net/gh/dler-io/Rules@main/Clash/Provider/miHoYo.yaml'
    path: ./Rules/miHoYo
    interval: 86400 



rules:
- DOMAIN-KEYWORD,rikkasaiko,DIRECT
- DOMAIN-KEYWORD,xingct,DIRECT
- RULE-SET,Special,DIRECT
# 广告拦截
- RULE-SET,AdBlock,REJECT
- RULE-SET,HTTPDNS,REJECT
# 国外媒体
- RULE-SET,Netflix,延迟选优
- RULE-SET,YouTube,节点选择
# 国内媒体
- RULE-SET,Bilibili,DIRECT
- RULE-SET,IQ,DIRECT
- RULE-SET,IQIYI,DIRECT
- RULE-SET,Letv,DIRECT
- RULE-SET,Netease Music,DIRECT
- RULE-SET,Tencent Video,DIRECT
- RULE-SET,WeTV,DIRECT
- RULE-SET,Youku,DIRECT
# Apple
- RULE-SET,Apple Music,DIRECT
- RULE-SET,Apple News,DIRECT
- RULE-SET,Apple TV,DIRECT
- RULE-SET,Apple,DIRECT
# 其他
- RULE-SET,Telegram,节点选择
- RULE-SET,Discord,节点选择
- RULE-SET,Google FCM,谷歌服务
- RULE-SET,Microsoft,延迟选优
- RULE-SET,AI Suite,谷歌服务
- RULE-SET,Steam,节点选择
- RULE-SET,miHoYo,DIRECT
- RULE-SET,PROXY,节点选择
- RULE-SET,Domestic,DIRECT
- RULE-SET,Domestic IPs,DIRECT
- RULE-SET,LAN,DIRECT
- GEOIP,CN,DIRECT
- MATCH,漏网之鱼



#   - RULE-SET,AdBlock,AdBlock
#   - RULE-SET,HTTPDNS,HTTPDNS
#   - RULE-SET,Special,DIRECT

#   - RULE-SET,Netflix,Netflix
#   - RULE-SET,Disney Plus,Disney
#   - RULE-SET,YouTube,YouTube
# #   - RULE-SET,YouTube Music,YouTube
#   - RULE-SET,Max,Max
#   - RULE-SET,Spotify,Spotify

#   - RULE-SET,Bilibili,CN Mainland TV
#   - RULE-SET,IQ,CN Mainland TV
#   - RULE-SET,IQIYI,CN Mainland TV
#   - RULE-SET,Letv,CN Mainland TV
#   - RULE-SET,Netease Music,CN Mainland TV
#   - RULE-SET,Tencent Video,CN Mainland TV
#   - RULE-SET,WeTV,CN Mainland TV
#   - RULE-SET,Youku,CN Mainland TV

#   - RULE-SET,Abema TV,Asian TV
#   - RULE-SET,Bahamut,Asian TV
#   - RULE-SET,Fox+,Asian TV
#   - RULE-SET,Hulu Japan,Asian TV
#   - RULE-SET,Japonx,Asian TV
#   - RULE-SET,JOOX,Asian TV
#   - RULE-SET,KKBOX,Asian TV
#   - RULE-SET,KKTV,Asian TV
#   - RULE-SET,Line TV,Asian TV
# #   - RULE-SET,MOO,Asian TV
#   - RULE-SET,myTV SUPER,Asian TV
#   - RULE-SET,Niconico,Asian TV
#   - RULE-SET,ViuTV,Asian TV

#   - RULE-SET,ABC,Global TV
#   - RULE-SET,Amazon,Global TV
#   - RULE-SET,BBC iPlayer,Global TV
#   - RULE-SET,DAZN,Global TV
#   - RULE-SET,Discovery Plus,Global TV
#   - RULE-SET,encoreTVB,Global TV
#   - RULE-SET,F1 TV,Global TV
#   - RULE-SET,Fox Now,Global TV
#   - RULE-SET,Hulu,Global TV
#   - RULE-SET,Pandora,Global TV
#   - RULE-SET,PBS,Global TV
#   - RULE-SET,Pornhub,Global TV
#   - RULE-SET,Soundcloud,Global TV

#   - RULE-SET,Apple Music,Apple TV
#   - RULE-SET,Apple News,Apple TV
#   - RULE-SET,Apple TV,Apple TV

#   - RULE-SET,Apple,Apple

#   - RULE-SET,Telegram,Telegram

#   - RULE-SET,Crypto,Crypto
#   - RULE-SET,Discord,Discord
#   - RULE-SET,Google FCM,Google FCM
#   - RULE-SET,Microsoft,Microsoft
#   - RULE-SET,AI Suite,AI Suite
#   - RULE-SET,PayPal,PayPal
#   - RULE-SET,Scholar,Scholar
#   - RULE-SET,Speedtest,Speedtest
#   - RULE-SET,Steam,Steam

#   - RULE-SET,miHoYo,miHoYo

#   - RULE-SET,PROXY,Proxy

#   - RULE-SET,Domestic,Domestic
#   - RULE-SET,Domestic IPs,Domestic

#   - RULE-SET,LAN,DIRECT
#   - GEOIP,CN,Domestic
#   - MATCH,Others
